ext {
    /**
     * Builds an Android version code from the version of the project.
     * This is designed to handle the -SNAPSHOT -RC -beta and -alpha format.
     *
     * I.e. during development the version ends with -SNAPSHOT. As the code stabilizes and release nears
     * one or many Release Candidates are tagged. These all end with "-alpha1", "-beta2", "-RC1" etc.
     * And the final release is without any suffix.
     * @return
     */
    buildVersionCode = {
        // The rules is as follows:
        // -SNAPSHOT counts as 0
        // -alpha* counts as the APLHA number, i.e. 1  to 30
        // -beta*  counts as the BETA  number, i.e. 31 to 70
        // -RC*    counts as the RC    number, i.e. 71 to 98
        // final release counts as 99.
        // Thus you can only have 98 Release Candidates, which ought to be enough for everyone

        def candidate = "99"
        def (major, minor, patch) = version.toLowerCase().replaceAll('-', '').tokenize('.')
        if (patch.endsWith("snapshot")) {
            candidate = "0"
            patch = patch.replaceAll("[^0-9]","")
        } else {
            def alpha
            (patch, alpha) = patch.tokenize("alpha")
            if (alpha) {
                candidate = alpha.toInteger() + 0
            }
            def beta
            (patch, beta) = patch.tokenize("beta")
            if (beta) {
                candidate = beta.toInteger() + 30
            }
            def rc
            (patch, rc) = patch.tokenize("rc")
            if (rc) {
                candidate = 70 + rc.toInteger()
            }
        }

        (major, minor, patch, candidate) = [major, minor, patch, candidate].collect{it.toInteger()}
        def vercode = (major * 1000000) + (minor * 10000) + (patch * 100) + candidate
        println "VersionCode:" + vercode
        vercode
    }
}